version: "3.8"

services:
  db:
    image: postgres
    volumes:
      - myapp_db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}

  api:
    build:
      context: ./api/
      dockerfile: Dockerfile
      target: production
    ports:
      - "3000:3000"
    environment:
      TZ: Asia/Tokyo
      RAILS_ENV: ${RAILS_ENV:-production}
      DEVISE_JWT_SECRET_KEY: ${DEVISE_JWT_SECRET_KEY}
      GMAIL_SMTP_USER: ${GMAIL_SMTP_USER}
      GMAIL_SMTP_PASSWORD: ${GMAIL_SMTP_PASSWORD}
      APP_NAME: ${APP_NAME}
      REDIS_URL: ${REDIS_URL}
      SHOP_FRONTEND_URL: ${SHOP_FRONTEND_URL}
      API_DATABASE_PASSWORD: ${API_DATABASE_PASSWORD}
    depends_on:
      - db
      - redis

  front:
    build:
      context: ./front/
      dockerfile: Dockerfile
    command: sh -c "cd myapp-front && npm install && npm start"
    ports:
      - "3001:3000"
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL}

  redis:
    image: redis
    command: redis-server
    ports:
      - "6379:6379"

  sidekiq:
    build:
      context: ./api/
      dockerfile: Dockerfile
      target: production
    command: bundle exec sidekiq
    environment:
      RAILS_ENV: ${RAILS_ENV:-production}
      REDIS_URL: ${REDIS_URL}
      GMAIL_SMTP_USER: ${GMAIL_SMTP_USER}
      GMAIL_SMTP_PASSWORD: ${GMAIL_SMTP_PASSWORD}
      APP_NAME: ${APP_NAME}
      SHOP_FRONTEND_URL: ${SHOP_FRONTEND_URL}
      SHOP_API_URL: ${SHOP_API_URL}
      API_DATABASE_PASSWORD: ${API_DATABASE_PASSWORD}
    depends_on:
      - db
      - redis
volumes:
  myapp_db_data:
